Install API Doc globally:

npm install apidoc -g

## Usage:
1. ) Start APIDoc
apidoc -i app/routes -o doc/assets/api -t doc/sections/api

## Deploy 

1.) Update Sociocortex:
Tag a Sociocortex commit with `docker-build-xâ€™ (where x is the number of the build) on BitBucket to trigger the build process of the container.

2.) Update the SACM:
Push the code to the Github repository and trigger the build process via the web hook provide by DockerHub (POST REQUEST to https://registry.hub.docker.com/u/padho/sacm/trigger/-SECRET-)
https://registry.hub.docker.com/u/sebis/sacm/trigger/-SECRET-

3.) Once everything is build, connect to the CONNECARE server. Make sure your SSH keys are properly installed.

4.) Once logged in, go to the Sociocortex docker directory:
```
cd /home/ubuntu/eurecat/dockers/sociocortex
sudo docker-compose pull # pull the latest version of the containers
sudo docker-compose stop # stop all currently running containers
sudo docker-compose up -d # restart the containers with the latest version
sudo docker logs sacm.backend --tail 100 -f
sudo docker exec -it sacm.sociocortex bash
```

4.1) Delete all docker images
docker system prune -a

5.) Common Docker commands
```
sudo docker ps 
sudo docker logs <containerId> --follow
sudo docker exec -it <containerId> bash
sudo docker stats sacm.frontend sacm.backend sacm.sociocortex sacm.mongo
sudo docker stats $(echo -n $(sudo docker ps --format "{{.Names}}"))
sudo docker update --memory 5GB sacm.mongo
sudo docker stop xcare.thirdparties.container xcare.integration-producer.container xcare.direct-messaging.container xcare.vitalinqconnector.container xcare.notifications-service xcare.generictask.container xcare.apigateway.container xcare.medicaldevices.container xcare.appserver.container xcare.rabbitmq.container xcare.redisserver.container
```

6.) Mongo commands
.find({url:{$regex : ".*humantasks/1pejs4af5xzr7/complete*"}})


7.) Useful stuff
Disk size usage
find / -size +50M -type f -exec du -h {} \; | sort -n
df -h
docker rmi <reponame>
sudo docker images
sudo docker image prune
sudo docker system prune
sudo docker images -q |susudo xargs docker rmi (funktiniert)

